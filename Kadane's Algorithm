//Problem -- Given an array Arr[] of N integers. Find the contiguous sub-array(containing at least one number) which has the maximum sum and return its sum.

//Solution

import java.util.Arrays;
import java.util.Collections;

public class SubArrayMaxSum{
    public static void main(String[] args) {
        int[] a={1,2,3,-2,5};
        int n=5;
        
 //Kadane's Algorithm ---- MAX SUM O(n)

        int maxSum=Integer.MIN_VALUE;
        int currentSum=0;
        
        for (int i=0;i<n;i++){
            currentSum=currentSum+a[i];

            if(currentSum>maxSum){
                maxSum=currentSum;
            }

            if(currentSum<0){
                currentSum=0;
            }
        }
        
        System.out.println(maxSum);
    }
}

